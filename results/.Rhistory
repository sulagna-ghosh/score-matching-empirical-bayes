expt = "d"
df_wellspec %>%
filter(experiment==expt) %>%
ggplot(aes(x = factor(n), y = value, group = n, fill = objective)) +
geom_boxplot(outliers=F) +
facet_wrap(data ~ objective, nrow= 2, scales = "free") +
theme(axis.text.x = element_text(angle=45, size=5),
legend.position = "none") +
ylab("In-sample SURE/MSE") +
labs(subtitle="Experiment c - wellspecified") +
scale_fill_brewer(palette=2)
ggsave(paste(path, "comparison_MSE_SURE_", expt, ".png"))
expt = "c"
df_wellspec %>%
filter(experiment==expt) %>%
ggplot(aes(x = factor(n), y = value, group = n, fill = objective)) +
geom_boxplot(outliers=F) +
facet_wrap(data ~ objective, nrow= 2, scales = "free") +
theme(axis.text.x = element_text(angle=45, size=5),
legend.position = "none") +
ylab("In-sample SURE/MSE") +
labs(subtitle=paste("Experiment", expt, "- wellspecified")) +
scale_fill_brewer(palette=2)
expt = "c"
df_wellspec %>%
filter(experiment==expt) %>%
ggplot(aes(x = factor(n), y = value, group = n, fill = objective)) +
geom_boxplot(outliers=F) +
facet_wrap(data ~ objective, nrow= 2) +
theme(axis.text.x = element_text(angle=45, size=5),
legend.position = "none") +
ylab("In-sample SURE/MSE") +
labs(subtitle=paste("Experiment", expt, "- wellspecified")) +
scale_fill_brewer(palette=2)
ggsave(paste(path, "comparison_MSE_SURE_", expt, ".png"))
expt = "d"
df_wellspec %>%
filter(experiment==expt) %>%
ggplot(aes(x = factor(n), y = value, group = n, fill = objective)) +
geom_boxplot(outliers=F) +
facet_wrap(data ~ objective, nrow= 2) +
theme(axis.text.x = element_text(angle=45, size=5),
legend.position = "none") +
ylab("In-sample SURE/MSE") +
labs(subtitle=paste("Experiment", expt, "- wellspecified")) +
scale_fill_brewer(palette=2)
ggsave(paste(path, "comparison_MSE_SURE_", expt, ".png"))
expt = "c"
df_wellspec %>%
filter(experiment==expt) %>%
ggplot(aes(x = factor(n), y = value, group = n, fill = objective)) +
geom_boxplot(outliers=F) +
facet_wrap(data ~ objective, nrow= 2) +
theme(axis.text.x = element_text(angle=45, size=5),
legend.position = "none") +
# ylab("SURE/MSE") +
xlab("n") +
labs(subtitle=paste("Experiment", expt, "- wellspecified")) +
scale_fill_brewer(palette=2)
expt = "c"
df_wellspec %>%
filter(experiment==expt) %>%
ggplot(aes(x = factor(n), y = value, group = n, fill = objective)) +
geom_boxplot(outliers=F) +
facet_wrap(data ~ objective, nrow= 2) +
theme(axis.text.x = element_text(angle=45, size=5),
legend.position = "none") +
ylab("SURE/MSE") +
xlab("n") +
labs(subtitle=paste("Experiment", expt, "- wellspecified")) +
scale_fill_brewer(palette=2)
ggsave(paste(path, "comparison_MSE_SURE_", expt, ".png"))
expt = "d"
df_wellspec %>%
filter(experiment==expt) %>%
ggplot(aes(x = factor(n), y = value, group = n, fill = objective)) +
geom_boxplot(outliers=F) +
facet_wrap(data ~ objective, nrow= 2) +
theme(axis.text.x = element_text(angle=45, size=5),
legend.position = "none") +
ylab("SURE/MSE") +
xlab("n") +
labs(subtitle=paste("Experiment", expt, "- wellspecified")) +
scale_fill_brewer(palette=2)
ggsave(paste(path, "comparison_MSE_SURE_", expt, ".png"))
expt = "e"
df_wellspec %>%
filter(experiment==expt) %>%
ggplot(aes(x = factor(n), y = value, group = n, fill = objective)) +
geom_boxplot(outliers=F) +
facet_wrap(data ~ objective, nrow= 2) +
theme(axis.text.x = element_text(angle=45, size=5),
legend.position = "none") +
ylab("SURE/MSE") +
xlab("n") +
labs(subtitle=paste("Experiment", expt, "- wellspecified")) +
scale_fill_brewer(palette=2)
ggsave(paste(path, "comparison_MSE_SURE_", expt, ".png"))
expt = "f"
df_wellspec %>%
filter(experiment==expt) %>%
ggplot(aes(x = factor(n), y = value, group = n, fill = objective)) +
geom_boxplot(outliers=F) +
facet_wrap(data ~ objective, nrow= 2) +
theme(axis.text.x = element_text(angle=45, size=5),
legend.position = "none") +
ylab("SURE/MSE") +
xlab("n") +
labs(subtitle=paste("Experiment", expt, "- wellspecified")) +
scale_fill_brewer(palette=2)
ggsave(paste(path, "comparison_MSE_SURE_", expt, ".png"))
expt = "g"
df_wellspec %>%
filter(experiment==expt) %>%
ggplot(aes(x = factor(n), y = value, group = n, fill = objective)) +
geom_boxplot(outliers=F) +
facet_wrap(data ~ objective, nrow= 2) +
theme(axis.text.x = element_text(angle=45, size=5),
legend.position = "none") +
ylab("SURE/MSE") +
xlab("n") +
labs(subtitle=paste("Experiment", expt, "- wellspecified")) +
scale_fill_brewer(palette=2)
ggsave(paste(path, "comparison_MSE_SURE_", expt, ".png"))
expt = "h"
df_wellspec %>%
filter(experiment==expt) %>%
ggplot(aes(x = factor(n), y = value, group = n, fill = objective)) +
geom_boxplot(outliers=F) +
facet_wrap(data ~ objective, nrow= 2) +
theme(axis.text.x = element_text(angle=45, size=5),
legend.position = "none") +
ylab("SURE/MSE") +
xlab("n") +
labs(subtitle=paste("Experiment", expt, "- wellspecified")) +
scale_fill_brewer(palette=2)
ggsave(paste(path, "comparison_MSE_SURE_", expt, ".png"))
expt = "i"
df_wellspec %>%
filter(experiment==expt) %>%
ggplot(aes(x = factor(n), y = value, group = n, fill = objective)) +
geom_boxplot(outliers=F) +
facet_wrap(data ~ objective, nrow= 2) +
theme(axis.text.x = element_text(angle=45, size=5),
legend.position = "none") +
ylab("SURE/MSE") +
xlab("n") +
labs(subtitle=paste("Experiment", expt, "- wellspecified")) +
scale_fill_brewer(palette=2)
ggsave(paste(path, "comparison_MSE_SURE_", expt, ".png"))
expt = "j"
df_wellspec %>%
filter(experiment==expt) %>%
ggplot(aes(x = factor(n), y = value, group = n, fill = objective)) +
geom_boxplot(outliers=F) +
facet_wrap(data ~ objective, nrow= 2) +
theme(axis.text.x = element_text(angle=45, size=5),
legend.position = "none") +
ylab("SURE/MSE") +
xlab("n") +
labs(subtitle=paste("Experiment", expt, "- wellspecified")) +
scale_fill_brewer(palette=2)
ggsave(paste(path, "comparison_MSE_SURE_", expt, ".png"))
path = "xie_losses/figures_xie_losses/"
df_names = list.files("xie_losses/hidden_layer_same_run_results/")
df_names = df_names[str_detect(df_names, "location_scale_small_hidden_sizes_skip_connect_comparison")]
compare_nn_sizes = NULL
for (df_name in df_names[-1]){ # ignore location_scale_comparison 0
if (is.null(compare_nn_sizes)){
compare_nn_sizes = read.csv(paste("xie_losses/hidden_layer_same_run_results", df_name, sep="/"))
} else {
compare_nn_sizes = compare_nn_sizes %>% bind_rows(read.csv(paste("xie_losses/hidden_layer_same_run_results", df_name, sep="/")))
}
}
unique(compare_nn_sizes$hidden_sizes)
# ordered_nnsize_levels <- c("None", "(2,)", "(2, 2)", "(4,)", "(4, 4)", "(6,)", "(8,)", "(10,)")
compare_nn_sizes$hidden_sizes <- factor(compare_nn_sizes$hidden_sizes, levels = unique(compare_nn_sizes$hidden_sizes))
group_minima = compare_nn_sizes %>%
group_by(experiment, hidden_sizes, n, data) %>%
summarize(med_MSE = median(MSE_wellspec),
med_SURE = median(SURE_wellspec)) %>%
group_by(experiment, n, data) %>%
summarize(min_med_MSE = min(med_MSE),
min_med_SURE = min(med_SURE))
compare_nn_sizes %>%
filter(data=="train") %>%
ggplot(aes(x = hidden_sizes, y = SURE_wellspec, group = hidden_sizes, fill = experiment)) +
geom_boxplot(outliers=F) +
facet_wrap(experiment ~ n, nrow= 2, scales = "free") +
theme(axis.text.x = element_text(angle=45, size=5),
legend.position = "none") +
ylab("In-sample SURE") +
labs(subtitle="Comparison with small n values and small NN sizes (skip connections)") +
scale_fill_brewer(palette=2)
ggsave(paste(path, "comparison_smallnn_smalln_skipc_train_SURE.png"))
compare_nn_sizes %>%
filter(data=="test") %>%
ggplot(aes(x = hidden_sizes, y = SURE_wellspec, group = hidden_sizes, fill = experiment)) +
geom_boxplot(outliers=F) +
facet_wrap(experiment ~ n, nrow= 2, scales = "free") +
theme(axis.text.x = element_text(angle=45, size=5),
legend.position = "none") +
ylab("Out-of-sample SURE") +
labs(subtitle="Comparison with small n values and small NN sizes (skip connections)")+
scale_fill_brewer(palette=2)
ggsave(paste(path, "comparison_smallnn_smalln_skipc_test_SURE.png"))
compare_nn_sizes %>%
filter(data=="train") %>%
ggplot(aes(x = hidden_sizes, y = MSE_wellspec, group = hidden_sizes, fill = experiment)) +
geom_boxplot(outliers=F) +
facet_wrap(experiment ~ n, nrow= 2, scales = "free") +
theme(axis.text.x = element_text(angle=45, size=5),
legend.position = "none") +
ylab("In-sample MSE") +
labs(subtitle="Comparison with small n values and small NN sizes (skip connections)")+
scale_fill_brewer(palette=2)
ggsave(paste(path, "comparison_smallnn_smalln_skipc_train_MSE.png"))
compare_nn_sizes %>%
filter(data=="test") %>%
ggplot(aes(x = hidden_sizes, y = MSE_wellspec, group = hidden_sizes, fill = experiment)) +
geom_boxplot(outliers=F) +
facet_wrap(experiment ~ n, nrow= 2, scales = "free") +
theme(axis.text.x = element_text(angle=45, size=5),
legend.position = "none") +
ylab("Out-of-sample MSE") +
labs(subtitle="Comparison with small n values and small NN sizes (skip connections)")+
scale_fill_brewer(palette=2)
ggsave(paste(path, "comparison_smallnn_smalln_skipc_test_MSE.png"))
path = "xie_losses/figures_xie_losses/"
df_names = list.files("xie_losses/hidden_layer_same_run_results/")
path = "xie_losses/figures_xie_losses/"
df_names = list.files("xie_losses/hidden_layer_same_run_results/")
df_names = df_names[str_detect(df_names, "location_scale_small_hidden_sizes_skip_connect_comparison")]
compare_nn_sizes = NULL
for (df_name in df_names[-1]){ # ignore location_scale_comparison 0
if (is.null(compare_nn_sizes)){
compare_nn_sizes = read.csv(paste("xie_losses/hidden_layer_same_run_results", df_name, sep="/"))
} else {
compare_nn_sizes = compare_nn_sizes %>% bind_rows(read.csv(paste("xie_losses/hidden_layer_same_run_results", df_name, sep="/")))
}
}
unique(compare_nn_sizes$hidden_sizes)
# ordered_nnsize_levels <- c("None", "(2,)", "(2, 2)", "(4,)", "(4, 4)", "(6,)", "(8,)", "(10,)")
compare_nn_sizes$hidden_sizes <- factor(compare_nn_sizes$hidden_sizes, levels = unique(compare_nn_sizes$hidden_sizes))
group_minima = compare_nn_sizes %>%
group_by(experiment, hidden_sizes, n, data) %>%
summarize(med_MSE = median(MSE_wellspec),
med_SURE = median(SURE_wellspec)) %>%
group_by(experiment, n, data) %>%
summarize(min_med_MSE = min(med_MSE),
min_med_SURE = min(med_SURE))
compare_nn_sizes %>%
filter(data=="train") %>%
ggplot(aes(x = hidden_sizes, y = SURE_wellspec, group = hidden_sizes, fill = experiment)) +
geom_boxplot(outliers=F) +
facet_wrap(experiment ~ n, nrow= 2, scales = "free") +
theme(axis.text.x = element_text(angle=45, size=5),
legend.position = "none") +
ylab("In-sample SURE") +
labs(subtitle="Comparison with small n values and small NN sizes (skip connections)") +
scale_fill_brewer(palette=2)
ggsave(paste(path, "comparison_smallnn_smalln_skipc_train_SURE.png"))
compare_nn_sizes %>%
filter(data=="test") %>%
ggplot(aes(x = hidden_sizes, y = SURE_wellspec, group = hidden_sizes, fill = experiment)) +
geom_boxplot(outliers=F) +
facet_wrap(experiment ~ n, nrow= 2, scales = "free") +
theme(axis.text.x = element_text(angle=45, size=5),
legend.position = "none") +
ylab("Out-of-sample SURE") +
labs(subtitle="Comparison with small n values and small NN sizes (skip connections)")+
scale_fill_brewer(palette=2)
ggsave(paste(path, "comparison_smallnn_smalln_skipc_test_SURE.png"))
compare_nn_sizes %>%
filter(data=="train") %>%
ggplot(aes(x = hidden_sizes, y = MSE_wellspec, group = hidden_sizes, fill = experiment)) +
geom_boxplot(outliers=F) +
facet_wrap(experiment ~ n, nrow= 2, scales = "free") +
theme(axis.text.x = element_text(angle=45, size=5),
legend.position = "none") +
ylab("In-sample MSE") +
labs(subtitle="Comparison with small n values and small NN sizes (skip connections)")+
scale_fill_brewer(palette=2)
ggsave(paste(path, "comparison_smallnn_smalln_skipc_train_MSE.png"))
compare_nn_sizes %>%
filter(data=="test") %>%
ggplot(aes(x = hidden_sizes, y = MSE_wellspec, group = hidden_sizes, fill = experiment)) +
geom_boxplot(outliers=F) +
facet_wrap(experiment ~ n, nrow= 2, scales = "free") +
theme(axis.text.x = element_text(angle=45, size=5),
legend.position = "none") +
ylab("Out-of-sample MSE") +
labs(subtitle="Comparison with small n values and small NN sizes (skip connections)")+
scale_fill_brewer(palette=2)
ggsave(paste(path, "comparison_smallnn_smalln_skipc_test_MSE.png"))
library(ggpubr) # arrange multiple figures together
library(tidyverse)
library(ggh4x) # facetted_pos_scales
library(ggpubr) # arrange multiple figures together
library(latex2exp)
library(RColorBrewer)
library(lemon)
library(scales)
palette1 <- brewer.pal(8, "Dark2")
palette2 <- brewer.pal(8, "Set1")
palette3 <- brewer.pal(8, "Set2")
dark2_palette <- unique(c(palette1, palette2, palette3))
theme_set(theme_bw())
df_names = list.files("xie_losses/final_results")
df_names = df_names[str_detect(df_names, "location_scale_skip_connect_comparison")]
df = NULL
for (df_name in df_names[-1]){ # ignore location_scale_comparison 0
if (is.null(df)){
df = read.csv(paste("xie_losses/final_results", df_name, sep="/"))
} else {
df = df %>% bind_rows(read.csv(paste("xie_losses/final_results", df_name, sep="/")))
}
}
df = df %>%
select(-X) %>%
pivot_longer(5:17, names_to = "model", values_to = "value") %>%
separate(model, c("objective", "model"))
df$use_location = as.logical(df$use_location)
df$use_scale = as.logical(df$use_scale)
df_mean = df %>%
group_by(n, use_location, use_scale, experiment, data, objective, model) %>%
summarize(mean = mean(value, na.rm=T),
count = n(),
se = sd(value, na.rm=T)/sqrt(count), .groups="drop")
df_mean = df_mean  %>%
mutate(se = if_else(n > 400, NA, se))
m_sim = unique(df_mean$count)
m_sim
bayes_risk = data.frame("experiment" = c("c", "d", "e", "f", "g", "h", "i", "j"),
"yintercept" = c(0, 0, 0.15, 0, 0.036, 0.338, 1.327, 0.833),
"model" = rep("Bayes risk", 8)) %>%
mutate(experiment = factor(experiment))
df_mean_plot = df_mean %>%
filter(data=="train", objective=="MSE",
!use_location, use_scale, experiment != "d5",
model != "NPMLEinit") %>%
mutate(model = case_when(model == "misspec" ~ "SURE-PM",
model == "wellspec" ~ "SURE-THING",
model == "thetaG" ~ "SURE-grandmean",
model == "surels" ~ "SURE-LS",
TRUE ~ model),
model = factor(model, levels=c("NPMLE", "SURE-PM", "SURE-grandmean", "SURE-THING", "EBCF", "SURE-LS", "Bayes risk"))) %>%
mutate(experiment = factor(experiment),
experiment = factor(experiment, levels=c("c", "d", "e", "f", "g", "h", "i", "j")))
ground_truth_df = df_mean_plot %>%
group_by(n, experiment) %>%
summarize(count = n()) %>%
left_join(bayes_risk, by = "experiment") %>%
mutate(model = factor(model, levels=c("NPMLE", "SURE-PM", "SURE-grandmean", "SURE-THING", "EBCF", "SURE-LS", "Bayes risk")),
experiment = factor(experiment)) %>%
rename(mean = yintercept)
levels(df_mean_plot$experiment) = c(c = TeX(r"(Uniform$$ prior)"),
d = TeX(r"(Inverse-$\chi^2$ prior)"),
e = TeX(r"(Bimodal $\mu_i$, Two-point $\sigma_i$)"),
f = TeX(r"(Uniform$$ likelihood)"),
g = TeX(r"(Two-point $\mu_i$, Uniform $\sigma_i$)"),
h = TeX(r"(Poisson $\mu_i$)"),
i = TeX(r"(Five$$ covariates)"),
j = TeX(r"(Uni-covariate$$ heteroscedastic$$ prior)"))
levels(ground_truth_df$experiment) = c(c = TeX(r"(Uniform$$ prior)"),
d = TeX(r"(Inverse-$\chi^2$ prior)"),
e = TeX(r"(Bimodal $\mu_i$, Two-point $\sigma_i$)"),
f = TeX(r"(Uniform$$ likelihood)"),
g = TeX(r"(Two-point $\mu_i$, Uniform $\sigma_i$)"),
h = TeX(r"(Poisson $\mu_i$)"),
i = TeX(r"(Five$$ covariates)"),
j = TeX(r"(Uni-covariate$$ heteroscedastic$$ prior)"))
levels(bayes_risk$experiment) = c(c = TeX(r"(Uniform$$ prior)"),
d = TeX(r"(Inverse-$\chi^2$ prior)"),
e = TeX(r"(Bimodal $\mu_i$, Two-point $\sigma_i$)"),
f = TeX(r"(Uniform$$ likelihood)"),
g = TeX(r"(Two-point $\mu_i$, Uniform $\sigma_i$)"),
h = TeX(r"(Poisson $\mu_i$)"),
i = TeX(r"(Five$$ covariates)"),
j = TeX(r"(Uni-covariate$$ heteroscedastic$$ prior)"))
df_mean_plot_line = df_mean_plot %>%
select(n, experiment, count, mean, model,) %>%
bind_rows(ground_truth_df)
ggplot(df_mean_plot, aes(x = factor(n), color=model, shape=model, linetype=model)) +
geom_point(aes(y = mean), size = 2.5) +
geom_line(data= df_mean_plot_line, aes(y = mean, group = model,  linetype=model), linewidth=0.75) +
geom_errorbar(aes(ymin = mean-1.96*se,
ymax = mean+1.96*se,
group=model), alpha=0.5, show.legend=F, width=0.5) +
facet_wrap( ~ experiment, scales="free_y", labeller=label_parsed, nrow = 4, ncol = 2) +
# labs(title="In-sample MSE, scale only") +
theme(axis.text.x = element_text(angle=45, hjust=1),
legend.position="bottom",
text=element_text(size=25),
legend.key.size = unit(2,"line")) +
# geom_hline(data = bayes_risk, aes(yintercept = yintercept), show.legend = F) +
geom_text(data = bayes_risk, aes(x = 5, y = yintercept, label = paste0("Bayes risk: ", yintercept)), hjust = -0.15, vjust = 1.35, color = 'black', size = 7) +
scale_y_continuous(expand = expansion(mult = c(0.13, 0.1))) +
scale_color_manual(values=dark2_palette[c(1,3,2,4,10,9,8)], name="") +
scale_linetype_manual(values=c(2, 4, 3, 1, 6, 5, 1), name="") +
scale_shape_manual(values=c(15, 17, 16, 18, 19, 20, 1), name="") +
ylab("In-sample MSE") +
xlab("n")
ggsave("xie_plots_with_all/median_scale_MSE_all_skip_connect_final_small.png", height=20, width=16)
library(tidyverse)
library(ggh4x) # facetted_pos_scales
library(ggpubr) # arrange multiple figures together
library(latex2exp)
library(RColorBrewer)
library(lemon)
library(scales)
palette1 <- brewer.pal(8, "Dark2")
palette2 <- brewer.pal(8, "Set1")
palette3 <- brewer.pal(8, "Set2")
dark2_palette <- unique(c(palette1, palette2, palette3))
theme_set(theme_bw())
df_names = list.files("xie_losses/final_results")
df_names = df_names[str_detect(df_names, "location_scale_skip_connect_comparison")]
df = NULL
for (df_name in df_names[-1]){ # ignore location_scale_comparison 0
if (is.null(df)){
df = read.csv(paste("xie_losses/final_results", df_name, sep="/"))
} else {
df = df %>% bind_rows(read.csv(paste("xie_losses/final_results", df_name, sep="/")))
}
}
df = df %>%
select(-X) %>%
pivot_longer(5:17, names_to = "model", values_to = "value") %>%
separate(model, c("objective", "model"))
df$use_location = as.logical(df$use_location)
df$use_scale = as.logical(df$use_scale)
df_mean = df %>%
group_by(n, use_location, use_scale, experiment, data, objective, model) %>%
summarize(mean = mean(value, na.rm=T),
count = n(),
se = sd(value, na.rm=T)/sqrt(count), .groups="drop")
df_mean = df_mean  %>%
mutate(se = if_else(n > 400, NA, se))
m_sim = unique(df_mean$count)
m_sim
bayes_risk = data.frame("experiment" = c("c", "d", "e", "f", "g", "h", "i", "j"),
"yintercept" = c(0, 0, 0.15, 0, 0.036, 0.338, 1.327, 0.833),
"model" = rep("Bayes risk", 8)) %>%
mutate(experiment = factor(experiment))
df_mean_plot = df_mean %>%
filter(data=="train", objective=="MSE",
!use_location, use_scale, experiment != "d5",
model != "NPMLEinit") %>%
mutate(model = case_when(model == "misspec" ~ "SURE-PM",
model == "wellspec" ~ "SURE-THING",
model == "thetaG" ~ "SURE-grandmean",
model == "surels" ~ "SURE-LS",
TRUE ~ model),
model = factor(model, levels=c("NPMLE", "SURE-PM", "SURE-grandmean", "SURE-THING", "EBCF", "SURE-LS", "Bayes risk"))) %>%
mutate(experiment = factor(experiment),
experiment = factor(experiment, levels=c("c", "d", "e", "f", "g", "h", "i", "j")))
ground_truth_df = df_mean_plot %>%
group_by(n, experiment) %>%
summarize(count = n()) %>%
left_join(bayes_risk, by = "experiment") %>%
mutate(model = factor(model, levels=c("NPMLE", "SURE-PM", "SURE-grandmean", "SURE-THING", "EBCF", "SURE-LS", "Bayes risk")),
experiment = factor(experiment)) %>%
rename(mean = yintercept)
levels(df_mean_plot$experiment) = c(c = TeX(r"(Uniform$$ prior)"),
d = TeX(r"(Inverse-$\chi^2$ prior)"),
e = TeX(r"(Bimodal $\mu_i$, Two-point $\sigma_i$)"),
f = TeX(r"(Uniform$$ likelihood)"),
g = TeX(r"(Two-point $\mu_i$, Uniform $\sigma_i$)"),
h = TeX(r"(Poisson $\mu_i$)"),
i = TeX(r"(Five$$ covariates)"),
j = TeX(r"(Uni-covariate$$ heteroscedastic$$ prior)"))
levels(ground_truth_df$experiment) = c(c = TeX(r"(Uniform$$ prior)"),
d = TeX(r"(Inverse-$\chi^2$ prior)"),
e = TeX(r"(Bimodal $\mu_i$, Two-point $\sigma_i$)"),
f = TeX(r"(Uniform$$ likelihood)"),
g = TeX(r"(Two-point $\mu_i$, Uniform $\sigma_i$)"),
h = TeX(r"(Poisson $\mu_i$)"),
i = TeX(r"(Five$$ covariates)"),
j = TeX(r"(Uni-covariate$$ heteroscedastic$$ prior)"))
levels(bayes_risk$experiment) = c(c = TeX(r"(Uniform$$ prior)"),
d = TeX(r"(Inverse-$\chi^2$ prior)"),
e = TeX(r"(Bimodal $\mu_i$, Two-point $\sigma_i$)"),
f = TeX(r"(Uniform$$ likelihood)"),
g = TeX(r"(Two-point $\mu_i$, Uniform $\sigma_i$)"),
h = TeX(r"(Poisson $\mu_i$)"),
i = TeX(r"(Five$$ covariates)"),
j = TeX(r"(Uni-covariate$$ heteroscedastic$$ prior)"))
df_mean_plot_line = df_mean_plot %>%
select(n, experiment, count, mean, model,) %>%
bind_rows(ground_truth_df)
ggplot(df_mean_plot, aes(x = factor(n), color=model, shape=model, linetype=model)) +
geom_point(aes(y = mean), size = 2.5) +
geom_line(data= df_mean_plot_line, aes(y = mean, group = model,  linetype=model), linewidth=0.75) +
geom_errorbar(aes(ymin = mean-1.96*se,
ymax = mean+1.96*se,
group=model), alpha=0.5, show.legend=F, width=0.5) +
facet_wrap( ~ experiment, scales="free_y", labeller=label_parsed, nrow = 4, ncol = 2) +
# labs(title="In-sample MSE, scale only") +
theme(axis.text.x = element_text(angle=45, hjust=1),
legend.position="bottom",
text=element_text(size=25),
legend.key.size = unit(2,"line")) +
# geom_hline(data = bayes_risk, aes(yintercept = yintercept), show.legend = F) +
geom_text(data = bayes_risk, aes(x = 5, y = yintercept, label = paste0("Bayes risk: ", yintercept)), hjust = -0.15, vjust = 1.35, color = 'black', size = 7) +
scale_y_continuous(expand = expansion(mult = c(0.13, 0.1))) +
scale_color_manual(values=dark2_palette[c(1,3,2,4,10,9,8)], name="") +
scale_linetype_manual(values=c(2, 4, 3, 1, 6, 5, 1), name="") +
scale_shape_manual(values=c(15, 17, 16, 18, 19, 20, 1), name="") +
ylab("In-sample MSE") +
xlab("n")
ggsave("xie_plots_with_all/median_scale_MSE_all_skip_connect_final_small.png", height=20, width=16)
